{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/practice/netflix/components/movie/DeleteMovie.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport DataTable, { TableColumn } from \"react-data-table-component\";\r\nimport React from \"react\";\r\n\r\nimport { PencilIcon, TrashIcon } from \"@heroicons/react/24/solid\";\r\nimport moment from \"moment\";\r\nimport { useRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\n\r\ninterface Movie {\r\n  _id: string;\r\n  name: string;\r\n  cast: [string];\r\n  singer: [string];\r\n  budget: string;\r\n  releaseDate: Date;\r\n  videoUrl?: string;\r\n}\r\n\r\nconst MyDataTable = () => {\r\n  const [data, setData] = useState<Movie[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  const fetchData = async () => {\r\n    try {\r\n      const [moviesResponse, videosResponse] = await Promise.all([\r\n        fetch(\"/api/movies\").then((res) => res.json()),\r\n        fetch(\"/api/get-videos\").then((res) => res.json()),\r\n      ]);\r\n\r\n      console.log(\"Movies API Response:\", moviesResponse);\r\n      console.log(\"Videos API Response:\", videosResponse);\r\n\r\n      if (!Array.isArray(videosResponse)) {\r\n        console.error(\r\n          \"videosResponse is not an array. Response:\",\r\n          videosResponse\r\n        );\r\n        throw new Error(\"videosResponse is not an array\");\r\n      }\r\n\r\n      const mergedData: Movie[] = moviesResponse?.map((movie: Movie) => {\r\n        const video = videosResponse.find((v: any) => v.movieId === movie._id);\r\n        return { ...movie, videoUrl: video?.videoUrl || \"\" };\r\n      });\r\n\r\n      setData(mergedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const handleDelete = async (id: string) => {\r\n    try {\r\n      const res = await axios.delete(`/api/movies?id=${id}`);\r\n      console.log(\"Delete response:\", res.data); // Add this line\r\n\r\n      setMovies((prevMovies) => prevMovies.filter((movie) => movie._id !== id));\r\n      fetchData();\r\n    } catch (err: any) {\r\n      console.error(\"Error deleting movie:\", err.response?.data || err.message);\r\n      alert(\r\n        `Error deleting movie: ${err.response?.data?.error || err.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleEdit = (id: string) => {\r\n    console.log(\"hello\");\r\n    router.push(`/edit/${id}`);\r\n  };\r\n\r\n  const columns: TableColumn<Movie>[] = [\r\n    {\r\n      name: \"Name\",\r\n      selector: (row: Movie) => row.name,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Singer\",\r\n      selector: (row: Movie) => row.singer.join(\", \"), // join array to make it a string\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Cast\",\r\n      selector: (row: Movie) => row.cast.join(\", \"), // join array to make it a string\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Release Date\",\r\n      selector: (row: Movie) => new Date(row.releaseDate).toLocaleDateString(), // format date\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Budget\",\r\n      selector: (row: Movie) => row.budget.toString(), // convert to string if needed\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Release Date\",\r\n      selector: (row: Movie) => moment(row.releaseDate).format(\"MMMM DD, YYYY\"),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Video\",\r\n      cell: (row: Movie) =>\r\n        row.videoUrl ? (\r\n          <video width=\"100\" controls>\r\n            <source src={row.videoUrl} type=\"video/mp4\" />\r\n            Your browser does not support the video tag.\r\n          </video>\r\n        ) : (\r\n          <span>No Video Available</span>\r\n        ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      selector: (row: RowData) => row._id,\r\n      cell: (row: RowData) => (\r\n        <div className=\"flex flex-col sm:flex-row gap-2 text-xs\">\r\n          <button\r\n            className=\"flex-1 sm:flex-auto min-w-[40px] px-2 py-1 bg-white text-gray-800 rounded-md border border-gray-300\r\n                                 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-900\r\n                                 transition-colors duration-200 flex items-center justify-center\"\r\n            onClick={() => handleEdit(row._id)}\r\n          >\r\n            <PencilIcon className=\"mr-1 text-green-500 h-7 w-8\" />\r\n          </button>\r\n\r\n          <button\r\n            className=\"flex-1 sm:flex-auto min-w-[40px] px-2 py-1 bg-white text-gray-800 rounded-md border border-gray-300\r\n                                 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-900\r\n                                 transition-colors duration-200 flex items-center justify-center\"\r\n            onClick={() => handleDelete(row._id)}\r\n          >\r\n            <TrashIcon className=\"mr-1 text-red-500 h-8 w-8\" />\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Movies & Videos</h2>\r\n      <DataTable\r\n        columns={columns}\r\n        data={data}\r\n        progressPending={loading}\r\n        pagination\r\n        highlightOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDataTable;\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAIA;AACA;AACA;AAHA;AAAA;;;AAPA;;;;;;;AAsBA,MAAM,cAAc;;IAClB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAC5C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAEhD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,SAAS,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD;iCAAE;YACR;QACF;gCAAG,EAAE;IACL,MAAM,YAAY;QAChB,IAAI;YACF,MAAM,CAAC,gBAAgB,eAAe,GAAG,MAAM,QAAQ,GAAG,CAAC;gBACzD,MAAM,eAAe,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI;gBAC3C,MAAM,mBAAmB,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI;aAChD;YAED,QAAQ,GAAG,CAAC,wBAAwB;YACpC,QAAQ,GAAG,CAAC,wBAAwB;YAEpC,IAAI,CAAC,MAAM,OAAO,CAAC,iBAAiB;gBAClC,QAAQ,KAAK,CACX,6CACA;gBAEF,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,aAAsB,gBAAgB,IAAI,CAAC;gBAC/C,MAAM,QAAQ,eAAe,IAAI,CAAC,CAAC,IAAW,EAAE,OAAO,KAAK,MAAM,GAAG;gBACrE,OAAO;oBAAE,GAAG,KAAK;oBAAE,UAAU,OAAO,YAAY;gBAAG;YACrD;YAEA,QAAQ;QACV,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;QACxC,SAAU;YACR,WAAW;QACb;IACF;IACA,MAAM,eAAe,OAAO;QAC1B,IAAI;YACF,MAAM,MAAM,MAAM,iIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,IAAI;YACrD,QAAQ,GAAG,CAAC,oBAAoB,IAAI,IAAI,GAAG,gBAAgB;YAE3D,UAAU,CAAC,aAAe,WAAW,MAAM,CAAC,CAAC,QAAU,MAAM,GAAG,KAAK;YACrE;QACF,EAAE,OAAO,KAAU;YACjB,QAAQ,KAAK,CAAC,yBAAyB,IAAI,QAAQ,EAAE,QAAQ,IAAI,OAAO;YACxE,MACE,CAAC,sBAAsB,EAAE,IAAI,QAAQ,EAAE,MAAM,SAAS,IAAI,OAAO,EAAE;QAEvE;IACF;IAEA,MAAM,aAAa,CAAC;QAClB,QAAQ,GAAG,CAAC;QACZ,OAAO,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI;IAC3B;IAEA,MAAM,UAAgC;QACpC;YACE,MAAM;YACN,UAAU,CAAC,MAAe,IAAI,IAAI;YAClC,UAAU;QACZ;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAe,IAAI,MAAM,CAAC,IAAI,CAAC;YAC1C,UAAU;QACZ;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAe,IAAI,IAAI,CAAC,IAAI,CAAC;YACxC,UAAU;QACZ;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAe,IAAI,KAAK,IAAI,WAAW,EAAE,kBAAkB;YACtE,UAAU;QACZ;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAe,IAAI,MAAM,CAAC,QAAQ;YAC7C,UAAU;QACZ;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAe,CAAA,GAAA,4HAAA,CAAA,UAAM,AAAD,EAAE,IAAI,WAAW,EAAE,MAAM,CAAC;YACzD,UAAU;QACZ;QACA;YACE,MAAM;YACN,MAAM,CAAC,MACL,IAAI,QAAQ,iBACV,0JAAC;oBAAM,OAAM;oBAAM,QAAQ;;sCACzB,0JAAC;4BAAO,KAAK,IAAI,QAAQ;4BAAE,MAAK;;;;;;wBAAc;;;;;;yCAIhD,0JAAC;8BAAK;;;;;;QAEZ;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAiB,IAAI,GAAG;YACnC,MAAM,CAAC,oBACL,0JAAC;oBAAI,WAAU;;sCACb,0JAAC;4BACC,WAAU;4BAGV,SAAS,IAAM,WAAW,IAAI,GAAG;sCAEjC,cAAA,0JAAC,6MAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;;;;;;sCAGxB,0JAAC;4BACC,WAAU;4BAGV,SAAS,IAAM,aAAa,IAAI,GAAG;sCAEnC,cAAA,0JAAC,2MAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;;;;;;;;;;;;QAI7B;KACD;IAED,qBACE,0JAAC;QAAI,WAAU;;0BACb,0JAAC;gBAAG,WAAU;0BAA6B;;;;;;0BAC3C,0JAAC,uKAAA,CAAA,UAAS;gBACR,SAAS;gBACT,MAAM;gBACN,iBAAiB;gBACjB,UAAU;gBACV,gBAAgB;;;;;;;;;;;;AAIxB;GA/IM;;QAMW,0HAAA,CAAA,YAAS;;;KANpB;uCAiJS"}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}