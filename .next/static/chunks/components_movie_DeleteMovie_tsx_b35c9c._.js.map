{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/practice/netflix/components/movie/DeleteMovie.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { PencilIcon, TrashIcon } from \"@heroicons/react/24/solid\";\r\nimport moment from \"moment\";\r\nimport { useRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\n\r\ninterface Video {\r\n  _id: string;\r\n  videoUrl: string;\r\n  movieId: string;\r\n}\r\n\r\ninterface RowData {\r\n  _id: string;\r\n  name: string;\r\n  singer: string[];\r\n  cast: string[];\r\n  releaseDate: string;\r\n  budget: number;\r\n}\r\nconst AdminPage = () => {\r\n  const [movies, setMovies] = useState<RowData[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [videos, setVideos] = useState<Video[]>([]);\r\n\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/movies\");\r\n        setMovies(res.data);\r\n      } catch (err) {\r\n        setError(\"Error fetching movies.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n    fetchVideos();\r\n  }, []);\r\n\r\n  const fetchVideos = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/get-videos\");\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setVideos(data.videos);\r\n      } else {\r\n        setError(data.error || \"Failed to fetch videos\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error fetching videos\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatCurrancy = (value: number): string => {\r\n    return new Intl.NumberFormat(\"en-US\", {\r\n      style: \"currency\",\r\n      currency: \"USD\",\r\n    }).format(value);\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    try {\r\n      await axios.delete(`/api/movies?id=${id}`);\r\n      setMovies((prevMovies) => prevMovies.filter((movie) => movie._id !== id));\r\n    } catch (err) {\r\n      console.error(\"Error deleting movie:\", err);\r\n      alert(\"Error deleting movie. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (id: string) => {\r\n    router.push(`/edit/${id}`);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Movie Name\",\r\n      selector: (row: RowData) => row.name,\r\n      sortable: true,\r\n      wrap: true,\r\n      cell: (row: RowData) => <span className=\"text-left\">{row.name}</span>,\r\n    },\r\n    {\r\n      name: \"Singer\",\r\n      selector: (row: RowData) => row.singer.join(\", \"),\r\n      sortable: true,\r\n      cell: (row: RowData) => (\r\n        <span className=\"text-left\">{row.singer.join(\", \")}</span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Cast\",\r\n      selector: (row: RowData) => row.cast.join(\", \"),\r\n      sortable: true,\r\n      cell: (row: RowData) => (\r\n        <span className=\"text-left\">{row.cast.join(\", \")}</span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Release Date\",\r\n      selector: (row: RowData) => moment(row.releaseDate).format(\"DD-MM-YYYY\"),\r\n      sortable: true,\r\n      wrap: true,\r\n      cell: (row: RowData) => (\r\n        <span className=\"text-left\">\r\n          {moment(row.releaseDate).format(\"DD-MM-YYYY\")}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Budget\",\r\n      sortable: true,\r\n      right: true,\r\n      wrap: true,\r\n      cell: (row: RowData) => (\r\n        <span className=\"text-left\">{formatCurrancy(row.budget)}</span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      selector: (row: RowData) => row._id,\r\n      cell: (row: RowData) => (\r\n        <div className=\"flex flex-col sm:flex-row gap-2 text-xs\">\r\n          <button\r\n            className=\"flex-1 sm:flex-auto min-w-[40px] px-2 py-1 bg-white text-gray-800 rounded-md border border-gray-300\r\n                                 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-900\r\n                                 transition-colors duration-200 flex items-center justify-center\"\r\n            onClick={() => handleEdit(row._id)}\r\n          >\r\n            <PencilIcon className=\"mr-1 text-green-500 h-7 w-8\" />\r\n          </button>\r\n\r\n          <button\r\n            className=\"flex-1 sm:flex-auto min-w-[40px] px-2 py-1 bg-white text-gray-800 rounded-md border border-gray-300\r\n                                 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-900\r\n                                 transition-colors duration-200 flex items-center justify-center\"\r\n            onClick={() => handleDelete(row._id)}\r\n          >\r\n            <TrashIcon className=\"mr-1 text-red-500 h-8 w-8\" />\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"mx-3 p-4 bg-white rounded-lg\">\r\n      <h1 className=\"text-xl font-semibold text-blue-900\">Manage Movies</h1>\r\n      <DataTable\r\n        columns={columns}\r\n        data={movies}\r\n        pagination\r\n        responsive\r\n        progressPending={loading}\r\n        paginationRowsPerPageOptions={[10, 20, 30, 40, 50]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AACA;AAHA;AAAA;;;AAJA;;;;;;;AAuBA,MAAM,YAAY;;IAChB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAEhD,MAAM,SAAS,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM;mDAAc;oBAClB,IAAI;wBACF,MAAM,MAAM,MAAM,iIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;wBAC5B,UAAU,IAAI,IAAI;oBACpB,EAAE,OAAO,KAAK;wBACZ,SAAS;oBACX,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;YACA;QACF;8BAAG,EAAE;IAEL,MAAM,cAAc;QAClB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,SAAS,EAAE,EAAE;gBACf,UAAU,KAAK,MAAM;YACvB,OAAO;gBACL,SAAS,KAAK,KAAK,IAAI;YACzB;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;QACZ,GAAG,MAAM,CAAC;IACZ;IAEA,MAAM,eAAe,OAAO;QAC1B,IAAI;YACF,MAAM,iIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,IAAI;YACzC,UAAU,CAAC,aAAe,WAAW,MAAM,CAAC,CAAC,QAAU,MAAM,GAAG,KAAK;QACvE,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,yBAAyB;YACvC,MAAM;QACR;IACF;IAEA,MAAM,aAAa,CAAC;QAClB,OAAO,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI;IAC3B;IAEA,MAAM,UAAU;QACd;YACE,MAAM;YACN,UAAU,CAAC,MAAiB,IAAI,IAAI;YACpC,UAAU;YACV,MAAM;YACN,MAAM,CAAC,oBAAiB,0JAAC;oBAAK,WAAU;8BAAa,IAAI,IAAI;;;;;;QAC/D;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAiB,IAAI,MAAM,CAAC,IAAI,CAAC;YAC5C,UAAU;YACV,MAAM,CAAC,oBACL,0JAAC;oBAAK,WAAU;8BAAa,IAAI,MAAM,CAAC,IAAI,CAAC;;;;;;QAEjD;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAiB,IAAI,IAAI,CAAC,IAAI,CAAC;YAC1C,UAAU;YACV,MAAM,CAAC,oBACL,0JAAC;oBAAK,WAAU;8BAAa,IAAI,IAAI,CAAC,IAAI,CAAC;;;;;;QAE/C;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAiB,CAAA,GAAA,4HAAA,CAAA,UAAM,AAAD,EAAE,IAAI,WAAW,EAAE,MAAM,CAAC;YAC3D,UAAU;YACV,MAAM;YACN,MAAM,CAAC,oBACL,0JAAC;oBAAK,WAAU;8BACb,CAAA,GAAA,4HAAA,CAAA,UAAM,AAAD,EAAE,IAAI,WAAW,EAAE,MAAM,CAAC;;;;;;QAGtC;QACA;YACE,MAAM;YACN,UAAU;YACV,OAAO;YACP,MAAM;YACN,MAAM,CAAC,oBACL,0JAAC;oBAAK,WAAU;8BAAa,eAAe,IAAI,MAAM;;;;;;QAE1D;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAiB,IAAI,GAAG;YACnC,MAAM,CAAC,oBACL,0JAAC;oBAAI,WAAU;;sCACb,0JAAC;4BACC,WAAU;4BAGV,SAAS,IAAM,WAAW,IAAI,GAAG;sCAEjC,cAAA,0JAAC,6MAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;;;;;;sCAGxB,0JAAC;4BACC,WAAU;4BAGV,SAAS,IAAM,aAAa,IAAI,GAAG;sCAEnC,cAAA,0JAAC,2MAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;;;;;;;;;;;;QAI7B;KACD;IAED,IAAI,SAAS;QACX,qBAAO,0JAAC;sBAAI;;;;;;IACd;IAEA,IAAI,OAAO;QACT,qBAAO,0JAAC;sBAAK;;;;;;IACf;IAEA,qBACE,0JAAC;QAAI,WAAU;;0BACb,0JAAC;gBAAG,WAAU;0BAAsC;;;;;;0BACpD,0JAAC,uKAAA,CAAA,UAAS;gBACR,SAAS;gBACT,MAAM;gBACN,UAAU;gBACV,UAAU;gBACV,iBAAiB;gBACjB,8BAA8B;oBAAC;oBAAI;oBAAI;oBAAI;oBAAI;iBAAG;;;;;;;;;;;;AAI1D;GA1JM;;QAMW,0HAAA,CAAA,YAAS;;;KANpB;uCA4JS"}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}