{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/practice/netflix/components/movie/AddMovie.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nexport default function AdminPage() {\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    singer: \"\",\r\n    cast: \"\",\r\n    releaseDate: \"\",\r\n    budget: \"\",\r\n  });\r\n  const router = useRouter();\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const [videoFile, setVideoFile] = useState<File | null>(null);\r\n  const [videoUrl, setVideoUrl] = useState<string>(\"\");\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      // Create the movie\r\n      const res = await fetch(\"/api/movies\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          name: form.name,\r\n          singer: form.singer,\r\n          cast: form.cast.split(\",\"),\r\n          releaseDate: form.releaseDate,\r\n          budget: Number(form.budget),\r\n        }),\r\n      });\r\n\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        const movieId: string = data._id; // Ensure _id is extracted correctly\r\n        console.log(`Movie ID: ${movieId}`);\r\n        // Ensure movieId is not empty\r\n        if (!movieId || typeof movieId !== \"string\") {\r\n          setError(\"Invalid movie ID format.\");\r\n          return;\r\n        }\r\n\r\n        // Now call handleUpload to upload the video with movieId\r\n        handleUpload(movieId); // Pass movieId to the video upload function\r\n        setMessage(\"Movie added successfully!\");\r\n        // router.push(\"/\"); // Optionally navigate to another page\r\n      } else {\r\n        setMessage(\"Failed to add movie.\");\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"Error submitting form.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (movieId: string) => {\r\n    if (!videoFile) {\r\n      setError(\"Please select a video file.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    // Check if the movieId is valid\r\n    if (!movieId || typeof movieId !== \"string\") {\r\n      setError(\"Invalid movie ID.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"video\", videoFile);\r\n    formData.append(\"movieId\", movieId); // Ensure movieId is a valid string\r\n\r\n    try {\r\n      const response = await fetch(\"/api/upload-video\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setVideoUrl(data.videoUrl);\r\n      } else {\r\n        setError(data.error || \"Failed to upload video\");\r\n      }\r\n    } catch (error) {\r\n      setError(\"Error uploading video\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      setVideoFile(file);\r\n      setError(\"\"); // Clear any previous error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen w-full bg-black justify-center items-center flex\">\r\n      <br />\r\n      <div className=\"p-4 max-w-lg bg-white \">\r\n        <h1 className=\"text-2xl font-bold mb-4\">Add Movie</h1>\r\n        <form onSubmit={handleSubmit} className=\"space-y-3\">\r\n          <input\r\n            name=\"name\"\r\n            value={form.name}\r\n            onChange={handleChange}\r\n            placeholder=\"Movie Name\"\r\n            className=\"border p-2 w-full\"\r\n            required\r\n          />\r\n          <input\r\n            name=\"cast\"\r\n            value={form.cast}\r\n            onChange={handleChange}\r\n            placeholder=\"Cast\"\r\n            className=\"border p-2 w-full\"\r\n            required\r\n          />\r\n          <input\r\n            name=\"singer\"\r\n            value={form.singer}\r\n            onChange={handleChange}\r\n            placeholder=\"singer\"\r\n            className=\"border p-2 w-full\"\r\n            required\r\n          />\r\n          <input\r\n            name=\"releaseDate\"\r\n            type=\"date\"\r\n            value={form.releaseDate}\r\n            onChange={handleChange}\r\n            className=\"border p-2 w-full\"\r\n            required\r\n          />\r\n          <input\r\n            name=\"budget\"\r\n            type=\"number\"\r\n            value={form.budget}\r\n            onChange={handleChange}\r\n            placeholder=\"Budget\"\r\n            className=\"border p-2 w-full\"\r\n            required\r\n          />\r\n\r\n          {/* Video Upload Section */}\r\n          <input\r\n            type=\"file\"\r\n            accept=\"video/*\"\r\n            onChange={handleFileChange}\r\n            disabled={loading}\r\n          />\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => videoFile && handleUpload(form.name)} // Remove this\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Uploading...\" : \"Upload Video\"}\r\n          </button>\r\n\r\n          {videoUrl && (\r\n            <div className=\"video-preview\">\r\n              <h3>Uploaded Video:</h3>\r\n              <video controls>\r\n                <source src={videoUrl} type=\"video/mp4\" />\r\n                Your browser does not support the video tag.\r\n              </video>\r\n            </div>\r\n          )}\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-red-600 py-3 hover:bg-green-700 text-white focus:bg-grenn-700 p-2 w-full\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Saving...\" : \"Save Movie\"}\r\n          </button>\r\n        </form>\r\n        {message && (\r\n          <p className=\"mt-3 text-center text-green-500\">{message}</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}