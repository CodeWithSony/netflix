{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Anil/flix/netflix/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\r\nimport type { AppProps } from \"next/app\";\r\n\r\nexport default function App({ Component, pageProps }: AppProps) {\r\n  return <Component {...pageProps} />;\r\n}\r\n"],"names":[],"mappings":";;;;;;AAGe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Anil/flix/netflix/components/Input.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\ninterface InputProps {\r\n  id: string;\r\n  onChange: any;\r\n  value:string;\r\n  label: string;\r\n  type: string;\r\n}\r\nconst Input: React.FC <InputProps> = ({id, onChange,value, label, type}) => {\r\n  return (\r\n    <>\r\n    <div className=\"relative \">\r\n  <input id={id} onChange={onChange} type={type} value={value}  className='block rounded-md px-6 pt-6 pb-1 w-full  text-white bg-neutral-700 appearance-none focus:outline-none focus:ring-0 peer ' placeholder='' />\r\n  <label \r\n  className='absolute text-md text-zinc-400 duration-150 transform -translate-y3 scale-75 top-4 z-10 origin-[0] left-6 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:translate-y-3 ' \r\n   htmlFor={id} > \r\n{label}\r\n  </label>\r\n  </div>\r\n  </>\r\n  )\r\n}\r\n\r\n\r\nexport default Input"],"names":[],"mappings":";;;;;AAQA,MAAM,QAA+B,CAAC,EAAC,EAAE,EAAE,QAAQ,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAC;IACrE,qBACE;kBACA,cAAA,qKAAC;YAAI,WAAU;;8BACjB,qKAAC;oBAAM,IAAI;oBAAI,UAAU;oBAAU,MAAM;oBAAM,OAAO;oBAAQ,WAAU;oBAA0H,aAAY;;;;;;8BAC9M,qKAAC;oBACD,WAAU;oBACT,SAAS;;wBAAK;wBAChB;;;;;;;;;;;;;;AAKD;uCAGe"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Anil/flix/netflix/pages/auth.tsx"],"sourcesContent":["import Image from \"next/image\";\r\nimport Input from \"@/components/Input\";\r\nimport { useCallback, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Auth() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [variant, setVariant] = useState(\"login\");\r\n\r\n  const toggleVariant = useCallback(() => {\r\n    setVariant((currentVariant) =>\r\n      currentVariant == \"login\" ? \"Register\" : \"login\"\r\n    );\r\n  }, []);\r\n\r\n  const register = useCallback(async () => {\r\n    try {\r\n      await axios.post(\"/api/register\", {\r\n        email,\r\n        name,\r\n        password,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [email, name, password]);\r\n\r\n  return (\r\n    <div className=\"relative netflix-bg h-full w-full bg-[url('/images/netbg.jpg')] bg-no-repeat bg-center bg-fixed bg-cover\">\r\n      <div className=\"bg-black w-full h-full lg:bg-opacity-50\">\r\n        <nav className=\"\">\r\n          <img\r\n            src=\"/images/logo.jpg\"\r\n            alt=\"netflix\"\r\n            width={100}\r\n            height={100}\r\n            className=\"bg-white\"\r\n          />\r\n        </nav>\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"bg-black  px-16 py-10 self self-center mt-2 lg:w-2/5 lg:max-md bg-opacity-70 \">\r\n            <h2 className=\"text-white text-4xl mb-8 font-semibold\">\r\n              {\" \"}\r\n              {variant == \"login\" ? \"Sign in\" : \"Register\"}{\" \"}\r\n            </h2>\r\n            <div className=\"flex flex-col gap-4  \">\r\n              {variant == \"Register\" && (\r\n                <Input\r\n                  label=\"username\"\r\n                  onChange={(ev: any) => {\r\n                    setName(ev.target.value);\r\n                  }}\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  value={name}\r\n                />\r\n              )}\r\n              <Input\r\n                label=\"email\"\r\n                onChange={(ev: any) => {\r\n                  setEmail(ev.target.value);\r\n                }}\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n              />\r\n              <Input\r\n                label=\"password\"\r\n                onChange={(ev: any) => {\r\n                  setPassword(ev.target.value);\r\n                }}\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n              />\r\n            </div>\r\n            <button\r\n              onClick={register}\r\n              className=\"bg-red-600 py-3 text-white rounded-md w-full mt-10 focus:bg-red-700 transition\"\r\n            >\r\n              {variant == \"login\" ? \"Login\" : \"Sign up\"}\r\n            </button>\r\n            <p className=\"text-neutral-500 mt-12 \">\r\n              {variant == \"login\"\r\n                ? \"First time using Netflix?\"\r\n                : \"already have an account\"}\r\n              <span\r\n                onClick={toggleVariant}\r\n                className=\"text-white ml-1 hover: underline cursor-pointer\"\r\n              >\r\n                {variant == \"login\" ? \"create and account\" : \"Login\"}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;;;;;AAEe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,gBAAgB,CAAA,GAAA,mGAAA,CAAA,cAAW,AAAD,EAAE;QAChC,WAAW,CAAC,iBACV,kBAAkB,UAAU,aAAa;IAE7C,GAAG,EAAE;IAEL,MAAM,WAAW,CAAA,GAAA,mGAAA,CAAA,cAAW,AAAD,EAAE;QAC3B,IAAI;YACF,MAAM,0GAAA,CAAA,UAAK,CAAC,IAAI,CAAC,iBAAiB;gBAChC;gBACA;gBACA;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC;QACd;IACF,GAAG;QAAC;QAAO;QAAM;KAAS;IAE1B,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAI,WAAU;8BACb,cAAA,qKAAC;wBACC,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;;;;;;8BAGd,qKAAC;oBAAI,WAAU;8BACb,cAAA,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAG,WAAU;;oCACX;oCACA,WAAW,UAAU,YAAY;oCAAY;;;;;;;0CAEhD,qKAAC;gCAAI,WAAU;;oCACZ,WAAW,4BACV,qKAAC,6GAAA,CAAA,UAAK;wCACJ,OAAM;wCACN,UAAU,CAAC;4CACT,QAAQ,GAAG,MAAM,CAAC,KAAK;wCACzB;wCACA,IAAG;wCACH,MAAK;wCACL,OAAO;;;;;;kDAGX,qKAAC,6GAAA,CAAA,UAAK;wCACJ,OAAM;wCACN,UAAU,CAAC;4CACT,SAAS,GAAG,MAAM,CAAC,KAAK;wCAC1B;wCACA,IAAG;wCACH,MAAK;wCACL,OAAO;;;;;;kDAET,qKAAC,6GAAA,CAAA,UAAK;wCACJ,OAAM;wCACN,UAAU,CAAC;4CACT,YAAY,GAAG,MAAM,CAAC,KAAK;wCAC7B;wCACA,IAAG;wCACH,MAAK;wCACL,OAAO;;;;;;;;;;;;0CAGX,qKAAC;gCACC,SAAS;gCACT,WAAU;0CAET,WAAW,UAAU,UAAU;;;;;;0CAElC,qKAAC;gCAAE,WAAU;;oCACV,WAAW,UACR,8BACA;kDACJ,qKAAC;wCACC,SAAS;wCACT,WAAU;kDAET,WAAW,UAAU,uBAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ7D"}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}