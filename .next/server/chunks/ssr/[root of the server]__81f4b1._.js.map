{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://E%3A/practice/netflix/pages/_app.tsx"],"sourcesContent":["import \"../styles/globals.css\";\r\nimport { SessionProvider } from \"next-auth/react\";\r\nimport type { AppProps } from \"next/app\";\r\nimport type { Session } from \"next-auth\";\r\n\r\ninterface CustomAppProps extends AppProps {\r\n  pageProps: {\r\n    session?: Session;\r\n  };\r\n}\r\n\r\nfunction App({ Component, pageProps }: CustomAppProps) {\r\n  return (\r\n    <SessionProvider session={pageProps.session}>\r\n      <Component {...pageProps} />\r\n    </SessionProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":[],"mappings":";;;;AACA;;;;AAUA,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAkB;IACnD,qBACE,qKAAC,mIAAA,CAAA,kBAAe;QAAC,SAAS,UAAU,OAAO;kBACzC,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B;uCAEe"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file://E%3A/practice/netflix/pages/moviedata.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\ninterface Movie {\r\n  _id: string;\r\n  name: string;\r\n  singer: string;\r\n  cast: string[];\r\n  releaseDate: string;\r\n  budget: number;\r\n}\r\n\r\nexport default function HomePage() {\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, []);\r\n  const fetchMovies = async () => {\r\n    try {\r\n      const res = await fetch(\"/api/movies\");\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        setMovies(data);\r\n      } else {\r\n        setError(\"Failed to load movies.\");\r\n      }\r\n    } catch (error) {\r\n      setError(\"Error fetching movies.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Movie List</h1>\r\n      <ul className=\"space-y-3\">\r\n        {movies.map((movie) => (\r\n          <li key={movie._id} className=\"border p-4\">\r\n            <h3 className=\"text-xl font-semibold\">{movie.name}</h3>\r\n            <p>\r\n              <strong>Cast:</strong> {movie.cast.join(\", \")}\r\n            </p>\r\n            <p>\r\n              <strong>Singer:</strong> {movie.singer || \"N/A\"}\r\n            </p>\r\n            <p>\r\n              <strong>Release Date:</strong>\r\n              {moment(movie.releaseDate).format(\"MMMM DD, YYYY\")}\r\n            </p>\r\n            <p>\r\n              <strong>Budget:</strong> {movie.budget}\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAWe,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAU;IAE3C,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IACL,MAAM,cAAc;QAClB,IAAI;YACF,MAAM,MAAM,MAAM,MAAM;YACxB,IAAI,IAAI,EAAE,EAAE;gBACV,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,UAAU;YACZ,OAAO;gBACL,SAAS;YACX;QACF,EAAE,OAAO,OAAO;YACd,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,IAAI,SAAS;QACX,qBAAO,qKAAC;sBAAI;;;;;;IACd;IAEA,IAAI,OAAO;QACT,qBAAO,qKAAC;sBAAK;;;;;;IACf;IAEA,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,qKAAC;gBAAG,WAAU;0BACX,OAAO,GAAG,CAAC,CAAC,sBACX,qKAAC;wBAAmB,WAAU;;0CAC5B,qKAAC;gCAAG,WAAU;0CAAyB,MAAM,IAAI;;;;;;0CACjD,qKAAC;;kDACC,qKAAC;kDAAO;;;;;;oCAAc;oCAAE,MAAM,IAAI,CAAC,IAAI,CAAC;;;;;;;0CAE1C,qKAAC;;kDACC,qKAAC;kDAAO;;;;;;oCAAgB;oCAAE,MAAM,MAAM,IAAI;;;;;;;0CAE5C,qKAAC;;kDACC,qKAAC;kDAAO;;;;;;oCACP,CAAA,GAAA,qGAAA,CAAA,UAAM,AAAD,EAAE,MAAM,WAAW,EAAE,MAAM,CAAC;;;;;;;0CAEpC,qKAAC;;kDACC,qKAAC;kDAAO;;;;;;oCAAgB;oCAAE,MAAM,MAAM;;;;;;;;uBAbjC,MAAM,GAAG;;;;;;;;;;;;;;;;AAoB5B"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}