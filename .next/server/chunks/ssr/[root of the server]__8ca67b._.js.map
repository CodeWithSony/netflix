{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://E%3A/practice/netflix/styles/dataTableStyles.js"],"sourcesContent":["const dataTableStyles = {\r\n  table: {\r\n    className: \"min-w-full divide-y divide-gray-200 bg-white\",\r\n    textAlign: \"left\",\r\n  },\r\n  header: {\r\n    className: \"bg-gray-100\",\r\n    style: {\r\n      borderTopWidth: \"1px\",\r\n      borderBottomWidth: \"1px\",\r\n      borderTopColor: \"rgba(0, 0, 0, 0.1)\",\r\n      borderBottomColor: \"rgba(0, 0, 0, 0.1)\",\r\n    },\r\n  },\r\n  headRow: {\r\n    style: {\r\n      borderTopWidth: \"1px\",\r\n      borderBottomWidth: \"1px\",\r\n      borderTopColor: \"rgba(0, 0, 0, 0.1)\",\r\n      borderBottomColor: \"rgba(0, 0, 0, 0.1)\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: \"0.35rem\",\r\n      paddingRight: \"0.35rem\",\r\n      paddingTop: \"0.5rem\",\r\n      paddingBottom: \"0.5rem\",\r\n      fontWeight: \"bold\",\r\n      lineHeight: \"1.25rem\",\r\n      letterSpacing: \"0.05em\",\r\n      textTransform: \"capitalize\",\r\n      color: \"#273342\",\r\n      textAlign: \"left\",\r\n      position: \"sticky\",\r\n      top: 0,\r\n      width: \"113px\",\r\n      backgroundColor: \"#f4f4f4\",\r\n      zIndex: 1,\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      cursor: \"pointer\", // Make the entire row clickable\r\n      transition: \"background-color 0.3s ease\",\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: \"0.35rem\",\r\n      paddingRight: \"0.35rem\",\r\n      width: \"113px\",\r\n      paddingTop: \"0.35rem\",\r\n      paddingBottom: \"0.35rem\",\r\n      fontSize: \"0.875rem\",\r\n      lineHeight: \"1.25rem\",\r\n      color: \"#273342\",\r\n      textAlign: \"left\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      borderTopWidth: \"1px\",\r\n      borderTopColor: \"rgba(0, 0, 0, 0.1)\",\r\n    },\r\n    pageButtonsStyle: {\r\n      padding: \"0.375rem 0.5rem\",\r\n      borderRadius: \"0.375rem\",\r\n      background: \"#E5E7EB\",\r\n      color: \"#4B5563\",\r\n      marginLeft: \"0.25rem\",\r\n      marginRight: \"0.25rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      cursor: \"pointer\",\r\n      transition: \"background-color 0.3s ease\",\r\n    },\r\n    activePageButtonStyle: {\r\n      background: \"#6B7280\",\r\n      color: \"#FFFFFF\",\r\n    },\r\n    disabledPageButtonStyle: {\r\n      background: \"transparent\",\r\n      color: \"#4B5563\",\r\n      cursor: \"not-allowed\",\r\n    },\r\n    pageInfoStyle: {\r\n      fontSize: \"0.875rem\",\r\n      lineHeight: \"1.25rem\",\r\n      color: \"#6B7280\",\r\n      marginLeft: \"0.5rem\",\r\n    },\r\n  },\r\n  paginationButtonIcon: {\r\n    style: {\r\n      marginLeft: \"0.25rem\",\r\n      width: \"1rem\",\r\n      height: \"1rem\",\r\n      fill: \"#4B5563\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default dataTableStyles;\r\n"],"names":[],"mappings":";;;AAAA,MAAM,kBAAkB;IACtB,OAAO;QACL,WAAW;QACX,WAAW;IACb;IACA,QAAQ;QACN,WAAW;QACX,OAAO;YACL,gBAAgB;YAChB,mBAAmB;YACnB,gBAAgB;YAChB,mBAAmB;QACrB;IACF;IACA,SAAS;QACP,OAAO;YACL,gBAAgB;YAChB,mBAAmB;YACnB,gBAAgB;YAChB,mBAAmB;QACrB;IACF;IACA,WAAW;QACT,OAAO;YACL,aAAa;YACb,cAAc;YACd,YAAY;YACZ,eAAe;YACf,YAAY;YACZ,YAAY;YACZ,eAAe;YACf,eAAe;YACf,OAAO;YACP,WAAW;YACX,UAAU;YACV,KAAK;YACL,OAAO;YACP,iBAAiB;YACjB,QAAQ;QACV;IACF;IACA,MAAM;QACJ,OAAO;YACL,QAAQ;YACR,YAAY;QACd;IACF;IACA,OAAO;QACL,OAAO;YACL,aAAa;YACb,cAAc;YACd,OAAO;YACP,YAAY;YACZ,eAAe;YACf,UAAU;YACV,YAAY;YACZ,OAAO;YACP,WAAW;QACb;IACF;IACA,YAAY;QACV,OAAO;YACL,gBAAgB;YAChB,gBAAgB;QAClB;QACA,kBAAkB;YAChB,SAAS;YACT,cAAc;YACd,YAAY;YACZ,OAAO;YACP,YAAY;YACZ,aAAa;YACb,SAAS;YACT,YAAY;YACZ,gBAAgB;YAChB,QAAQ;YACR,YAAY;QACd;QACA,uBAAuB;YACrB,YAAY;YACZ,OAAO;QACT;QACA,yBAAyB;YACvB,YAAY;YACZ,OAAO;YACP,QAAQ;QACV;QACA,eAAe;YACb,UAAU;YACV,YAAY;YACZ,OAAO;YACP,YAAY;QACd;IACF;IACA,sBAAsB;QACpB,OAAO;YACL,YAAY;YACZ,OAAO;YACP,QAAQ;YACR,MAAM;QACR;IACF;AACF;uCAEe"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file://E%3A/practice/netflix/components/movie/DeleteMovie.tsx"],"sourcesContent":["// const router = useRouter();\r\n\r\n// const { id } = router.query; // Get the movie ID from the URL\r\n\r\n// const DeleteMovie = () => {\r\n//   interface RowData {\r\n//     _id: string;\r\n//     name: string;\r\n//     singer: string[];\r\n//     cast: string[];\r\n//     releaseDate: string;\r\n//     budget: number;\r\n//   }\r\n\r\n//   const [movies, setMovies] = useState<RowData[]>([]);\r\n//   const [isExpenceLoading, setisExpenceLoading] = useState(false);\r\n\r\n//   const [loading, setLoading] = useState<boolean>(true);\r\n//   const [data, setData] = useState([]);\r\n\r\n//   const [error, setError] = useState<string>(\"\");\r\n\r\n//   useEffect(() => {\r\n//     fetchMovies();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const fetchMovie = async () => {\r\n//       if (!id) return;\r\n\r\n//       try {\r\n//         const response = await axios.get(`/api/movies?id=${id}`);\r\n//         setMovies(response.data);\r\n//         setLoading(false);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching movie:\", error);\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchMovie();\r\n//   }, [id]);\r\n\r\n//   const DATE_FORMATS = {\r\n//     DAY_MONTH_YEAR: \"DD-MM-YYYY\",\r\n//   };\r\n\r\n//   const formatCurrancy = (value: number): string => {\r\n//     return new Intl.NumberFormat(\"en-US\", {\r\n//       style: \"currency\",\r\n//       currency: \"USD\",\r\n//     }).format(value);\r\n//   };\r\n\r\n//   const columns = [\r\n//     {\r\n//       name: \"Movie Name\",\r\n//       selector: (row: RowData) => row.name,\r\n//       sortable: true,\r\n//       wrap: true,\r\n//       cell: (row: RowData) => <span className=\"text-left\">{row.name}</span>,\r\n//     },\r\n//     {\r\n//       name: \"Singer\",\r\n//       selector: (row: RowData) => row.singer.join(\", \"), //\r\n//       sortable: true,\r\n//       cell: (row: RowData) => (\r\n//         <span className=\"text-left\">{row.singer.join(\", \")}</span>\r\n//       ),\r\n//     },\r\n//     {\r\n//       name: \"Cast\",\r\n//       selector: (row: RowData) => row.cast.join(\", \"), //\r\n//       sortable: true,\r\n//       cell: (row: RowData) => (\r\n//         <span className=\"text-left\">{row.cast.join(\", \")}</span>\r\n//       ),\r\n//     },\r\n//     {\r\n//       name: \"Release Date\",\r\n//       selector: (row: RowData) =>\r\n//         moment(row.releaseDate).format(DATE_FORMATS.DAY_MONTH_YEAR),\r\n//       sortable: true,\r\n//       wrap: true,\r\n//       cell: (row: RowData) => (\r\n//         <span className=\"text-left\">\r\n//           {moment(row.releaseDate).format(DATE_FORMATS.DAY_MONTH_YEAR)}\r\n//         </span>\r\n//       ),\r\n//     },\r\n//     {\r\n//       name: \"Budget\",\r\n//       sortable: true,\r\n//       right: true,\r\n//       wrap: true,\r\n//       cell: (row: RowData) => (\r\n//         <span className=\"text-left\">{formatCurrancy(row.budget)}</span>\r\n//       ),\r\n//     },\r\n//     {\r\n//       name: \"Actions\",\r\n//       selector: (row: RowData) => row._id,\r\n//       cell: (row: RowData) => (\r\n//         <div className=\"flex flex-col sm:flex-row gap-2 text-xs\">\r\n//           <button\r\n//             className=\"flex-1 sm:flex-auto min-w-[40px] px-2 py-1 bg-white text-gray-800 rounded-md border border-gray-300\r\n//                              hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-900\r\n//                              transition-colors duration-200 flex items-center justify-center\"\r\n//             onClick={() => handleEdit(row._id)}\r\n//           >\r\n//             <PencilIcon className=\"mr-1 text-green-500 h-7 w-8\" />\r\n//           </button>\r\n\r\n//           <button\r\n//             className=\"flex-1 sm:flex-auto min-w-[40px] px-2 py-1 bg-white text-gray-800 rounded-md border border-gray-300\r\n//                              hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-900\r\n//                              transition-colors duration-200 flex items-center justify-center\"\r\n//             onClick={() => handleDelete(row._id)}\r\n//           >\r\n//             <TrashIcon className=\"mr-1 text-red-500 h-8 w-8\" />\r\n//           </button>\r\n//         </div>\r\n//       ),\r\n//     },\r\n//   ];\r\n\r\n//   const handleDelete = async (id: string) => {\r\n//     try {\r\n//       const response = await axios.delete(`/api/movies?id=${id}`);\r\n\r\n//       if (response.status === 200) {\r\n//         setMovies(movies.filter((movie) => movie._id !== id));\r\n//       } else {\r\n//         alert(\"Failed to delete movie.\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting movie:\", error);\r\n//       alert(\"Error deleting movie. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (id: string) => {\r\n//     console.log(\"edting..\", id);\r\n//     // console.log(\"Router:\", router);\r\n\r\n//     router.push(`/edit/${id}`);\r\n//     // console.log(\"Router:\", router);\r\n//   };\r\n\r\n//   const fetchMovies = async () => {\r\n//     try {\r\n//       const res = await fetch(\"/api/movies\");\r\n//       if (res.ok) {\r\n//         const data = await res.json();\r\n//         setMovies(data);\r\n//       } else {\r\n//         setError(\"Failed to load movies.\");\r\n//       }\r\n//     } catch (error) {\r\n//       setError(\"Error fetching movies.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>{error}</div>;\r\n//   }\r\n\r\n// };\r\n\r\n// export default DeleteMovie;\r\n\r\n\"use client\";\r\n\r\nimport React from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport dataTableStyles from \"../../styles/dataTableStyles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { PencilIcon, XCircleIcon, TrashIcon } from \"@heroicons/react/24/solid\";\r\nimport moment from \"moment\";\r\nimport { useRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\n\r\nexport default function AdminPage() {\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    singer: \"\",\r\n    cast: \"\",\r\n    releaseDate: \"\",\r\n    budget: \"\",\r\n  });\r\n  const router = useRouter();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      const res = await fetch(\"/api/movies\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          name: form.name,\r\n          singer: form.singer,\r\n          cast: form.cast.split(\",\"),\r\n          releaseDate: form.releaseDate,\r\n          budget: Number(form.budget),\r\n        }),\r\n      });\r\n\r\n      if (res.ok) {\r\n        setMessage(\"Movie added successfully!\");\r\n        router.push(\"/\");\r\n      } else {\r\n        setMessage(\"Failed to add movie.\");\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"Error submitting form.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-3 p-4 bg-white rounded-lg    \">\r\n      <h1 className=\"text-xl font-semibold text-blue-900\">Expenses</h1>\r\n      <DataTable\r\n        columns={columns}\r\n        data={movies}\r\n        pagination\r\n        paginationServer\r\n        responsive\r\n        customStyles={dataTableStyles}\r\n        progressPending={isExpenceLoading}\r\n        // paginationTotalRows={totalRows}\r\n        // onChangePage={handlePageChange}\r\n        // onChangeRowsPerPage={handlePerRowsChange}\r\n        paginationRowsPerPageOptions={[10, 20, 30, 40, 50]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}