{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://E%3A/practice/netflix/pages/_app.tsx"],"sourcesContent":["import \"../styles/globals.css\";\r\nimport { SessionProvider } from \"next-auth/react\";\r\nimport type { AppProps } from \"next/app\";\r\nimport type { Session } from \"next-auth\";\r\n\r\ninterface CustomAppProps extends AppProps {\r\n  pageProps: {\r\n    session?: Session;\r\n  };\r\n}\r\n\r\nfunction App({ Component, pageProps }: CustomAppProps) {\r\n  return (\r\n    <SessionProvider session={pageProps.session}>\r\n      <Component {...pageProps} />\r\n    </SessionProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":[],"mappings":";;;;AACA;;;;AAUA,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAkB;IACnD,qBACE,qKAAC,mIAAA,CAAA,kBAAe;QAAC,SAAS,UAAU,OAAO;kBACzC,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B;uCAEe"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file://E%3A/practice/netflix/components/data/MovieData.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\ninterface Movie {\r\n  _id: string;\r\n  name: string;\r\n  singer: string;\r\n  cast: string[];\r\n  releaseDate: string;\r\n  budget: number;\r\n}\r\n\r\ninterface Video {\r\n  _id: string;\r\n  videoUrl: string;\r\n  movieId: string;\r\n}\r\n\r\nexport default function HomePage() {\r\n  const [data, setData] = useState<Movie[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string>(\"\");\r\n  const [videos, setVideos] = useState<Video[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n    fetchVideos();\r\n  }, []);\r\n\r\n  const fetchVideos = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/get-videos\");\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setVideos(data.videos);\r\n      } else {\r\n        setError(data.error || \"Failed to fetch videos\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error fetching videos\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchMovies = async () => {\r\n    try {\r\n      const res = await fetch(\"/api/movies\");\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        setMovies(data);\r\n      } else {\r\n        setError(\"Failed to load movies.\");\r\n      }\r\n    } catch (error) {\r\n      setError(\"Error fetching movies.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-2xl font-bold mb-4 mx-[40%]\">Movie List</h1>\r\n\r\n      <div className=\"p-4 flex w-full\">\r\n        <ul className=\"space-y-3 w-[75%]\">\r\n          {movies?.map((movie) => (\r\n            <li\r\n              key={movie._id}\r\n              className=\"border h-[230px] p-4 flex justify-between\"\r\n            >\r\n              <h3 className=\"text-xl font-semibold\">\r\n                Movie Name: {movie.name}\r\n              </h3>\r\n              <p>\r\n                <strong>Cast:</strong> {movie.cast.join(\", \")}\r\n              </p>\r\n              <p>\r\n                <strong>Singer:</strong> {movie.singer || \"N/A\"}\r\n              </p>\r\n              <p>\r\n                <strong>Release Date:</strong>\r\n                {moment(movie.releaseDate).format(\"MMMM DD, YYYY\")}\r\n              </p>\r\n              <p>\r\n                <strong>Budget:</strong> {movie.budget}\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <ul className=\"flex flex-col gap-y-2 w-[25%]\">\r\n          {videos?.map((video) => (\r\n            <p key={video._id} className=\"border p-4\">\r\n              <video controls className=\"w-[95%] h-[200px]\">\r\n                <source src={video.videoUrl} type=\"video/mp4\" />\r\n                Your browser does not support the video tag.\r\n              </video>\r\n            </p>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAiBe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAE5C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAEhD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR;QACA;IACF,GAAG,EAAE;IAEL,MAAM,cAAc;QAClB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,SAAS,EAAE,EAAE;gBACf,UAAU,KAAK,MAAM;YACvB,OAAO;gBACL,SAAS,KAAK,KAAK,IAAI;YACzB;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,cAAc;QAClB,IAAI;YACF,MAAM,MAAM,MAAM,MAAM;YACxB,IAAI,IAAI,EAAE,EAAE;gBACV,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,UAAU;YACZ,OAAO;gBACL,SAAS;YACX;QACF,EAAE,OAAO,OAAO;YACd,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,IAAI,SAAS;QACX,qBAAO,qKAAC;sBAAI;;;;;;IACd;IAEA,IAAI,OAAO;QACT,qBAAO,qKAAC;sBAAK;;;;;;IACf;IAEA,qBACE;;0BACE,qKAAC;gBAAG,WAAU;0BAAmC;;;;;;0BAEjD,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAG,WAAU;kCACX,QAAQ,IAAI,CAAC,sBACZ,qKAAC;gCAEC,WAAU;;kDAEV,qKAAC;wCAAG,WAAU;;4CAAwB;4CACvB,MAAM,IAAI;;;;;;;kDAEzB,qKAAC;;0DACC,qKAAC;0DAAO;;;;;;4CAAc;4CAAE,MAAM,IAAI,CAAC,IAAI,CAAC;;;;;;;kDAE1C,qKAAC;;0DACC,qKAAC;0DAAO;;;;;;4CAAgB;4CAAE,MAAM,MAAM,IAAI;;;;;;;kDAE5C,qKAAC;;0DACC,qKAAC;0DAAO;;;;;;4CACP,CAAA,GAAA,qGAAA,CAAA,UAAM,AAAD,EAAE,MAAM,WAAW,EAAE,MAAM,CAAC;;;;;;;kDAEpC,qKAAC;;0DACC,qKAAC;0DAAO;;;;;;4CAAgB;4CAAE,MAAM,MAAM;;;;;;;;+BAjBnC,MAAM,GAAG;;;;;;;;;;kCAsBpB,qKAAC;wBAAG,WAAU;kCACX,QAAQ,IAAI,CAAC,sBACZ,qKAAC;gCAAkB,WAAU;0CAC3B,cAAA,qKAAC;oCAAM,QAAQ;oCAAC,WAAU;;sDACxB,qKAAC;4CAAO,KAAK,MAAM,QAAQ;4CAAE,MAAK;;;;;;wCAAc;;;;;;;+BAF5C,MAAM,GAAG;;;;;;;;;;;;;;;;;;AAW7B"}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file://E%3A/practice/netflix/pages/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Link from \"next/link\";\r\nimport MovieData from \"../components/data/MovieData\";\r\nconst index = () => {\r\n  return (\r\n    <div className=\"flex w-[100%] gap-x-5 justity-between\">\r\n      <div className=\"bg-gray-400 w-full\">\r\n        <MovieData />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default index;\r\n"],"names":[],"mappings":";;;;AAEA;;;AACA,MAAM,QAAQ;IACZ,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;sBACb,cAAA,qKAAC,yHAAA,CAAA,UAAS;;;;;;;;;;;;;;;AAIlB;uCAEe"}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}